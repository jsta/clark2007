[
["index.html", "Models for Ecological Data Chapter 1 Usage 1.1 Contributing", " Models for Ecological Data Joseph Stachelek 2017-10-25 Chapter 1 Usage See chapters 1.1 Contributing Contributions are welcome. Edit the appropriate Rmd files. They are built by travis upon commit. "],
["probmodels.html", "Chapter 2 Basic probability models for data", " Chapter 2 Basic probability models for data Under construction "],
["simulpost.html", "Chapter 3 Simulating a posterior distribution 3.1 Regression with Gibbs sampling 3.2 A nonlinear model", " Chapter 3 Simulating a posterior distribution library(mvtnorm) 3.1 Regression with Gibbs sampling b.update &lt;- function(y, sinv){ if(length(sinv) == 1){ sx &lt;- crossprod(x) * sinv sy &lt;- crossprod(x, y) * sinv } if(length(sinv) &gt; 1){ ss &lt;- t(x) %*% sinv sx &lt;- ss %*% x sy &lt;- ss %*% y } bigv &lt;- solve(sx + vinvert) smallv &lt;- sy + vinvert %*% bprior b &lt;- t(rmvnorm(1, bigv %*% smallv, bigv)) b } v.update &lt;- function(y, rinverse){ if(length(rinverse) == 1){ sx &lt;- crossprod((y - x %*% b)) } if(length(rinverse) &gt; 1){ sx &lt;- t(y - x %*% b) %*% rinverse %*% (y - x %*% b) } u1 &lt;- s1 + 0.5 * n u2 &lt;- s2 + 0.5 * sx 1 / rgamma(1, u1, u2) } 3.2 A nonlinear model n &lt;- 100 light &lt;- runif(n, 0, 1) # covariate vector th0 &lt;- 0.1 # theta z &lt;- light / (th0 + light) x &lt;- cbind(rep(1, n), z) # n by 2 design matrix b0 &lt;- 12 # regression parameters b1 &lt;- 40 beta &lt;- matrix(c(b0, b1), 2, 1) sig &lt;- 25 y &lt;- matrix(rnorm(n, x %*% beta, sqrt(sig)), n, 1) # response vector # plot(x[,2], y) ngibbs &lt;- 10000 thgibbs &lt;- rep(0.1, ngibbs) th &lt;- 0.1 x[,2] &lt;- light/(th + light) bgibbs &lt;- matrix(0, nrow = ngibbs, ncol = 2) sgibbs &lt;- rep(1, ngibbs) sg &lt;- 1 thseq &lt;- seq(0.05, 0.3, length = 100) tmat &lt;- matrix(rep(thseq, each = n), nrow = n, byrow = FALSE) lmat &lt;- matrix(rep(light, each = 100), nrow = n, byrow = TRUE) zmat &lt;- lmat / (lmat + tmat) ymat &lt;- matrix(rep(y, each = 100), nrow = n, byrow = TRUE) bprior &lt;- as.vector(c(0, 0)) vinvert &lt;- solve(diag(1000, 2)) ppart &lt;- vinvert %*% bprior s1 &lt;- 0.1 s2 &lt;- 0.1 for(g in 1:ngibbs){ b &lt;- b.update(y, 1 / sg) sg &lt;- v.update(y, 1) mmat &lt;- b[1] + b[2] * zmat plik &lt;- apply(dnorm(ymat, mmat, sqrt(sg), log = TRUE), 2, sum) pseq &lt;- exp(plik - max(plik)) pbin &lt;- cumsum(pseq) zp &lt;- runif(1, pbin[1], pbin[100]) thgibbs[b] &lt;- thseq[findInterval(zp, pbin)] x[,2] &lt;- light / (th + light) bgibbs[g,] &lt;- b sgibbs[g] &lt;- sg th &lt;- thgibbs[g] } plot(thseq, pbin, xlim = c(0.05, 0.2)) "],
["references.html", "References", " References "]
]
